volumes:
  pg_data:
  backend_static:
  backend_media:
  frontend_build:

services:
  db:
    image: postgres:13-alpine
    restart: always
    env_file: ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: pyryanova/foodgram_backend:latest
    restart: always
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - backend_static:/static
      - backend_media:/media
    command: >
      bash -lc "
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 60
      "
    expose:
      - "8000"

  frontend:
    image: pyryanova/foodgram_frontend:latest
    restart: "no"
    env_file: ./.env
    volumes:
      - frontend_build:/app/build
    command: >
      bash -lc "
        npm ci &&
        npm run build &&
        cp -r build/* /app/build/
      "

  nginx:
    image: nginx:1.25-alpine
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/usr/share/nginx/html:rw
      - backend_static:/var/html/static:ro
      - backend_media:/var/html/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
