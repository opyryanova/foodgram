networks:
  foodgram_network:
    driver: bridge

volumes:
  db_data:
  static_volume:
  media_volume:
  frontend_volume:

services:
  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - ./.env
    networks:
      - foodgram_network
    container_name: foodgram_db

  backend:
    image: pyryanova/foodgram_backend
    restart: always
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - foodgram_network
    container_name: foodgram_backend

  frontend:
    image: pyryanova/foodgram_frontend
    volumes:
      - frontend_volume:/usr/share/nginx/html
    command: >
      sh -c "cp -r /usr/share/nginx/html/. /host && tail -f /dev/null"
    networks:
      - foodgram_network
    container_name: foodgram_frontend

  gateway:
    image: pyryanova/foodgram_gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - static_volume:/app/static
      - media_volume:/app/media
      - frontend_volume:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    networks:
      - foodgram_network
    container_name: foodgram_gateway
    restart: always